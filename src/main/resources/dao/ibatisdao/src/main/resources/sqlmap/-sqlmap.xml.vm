##DAO-sqlmap-mapping生成模版
##使用到的变量有：
##$!{tbb.className}类名，如：UserInfo
##$!{tbb.objectName}对象名，如：userInfo
##$!{tbb.tableName}表名，如：user_info
##$!{tbb.colList}表字段列表
##$!{tbb.pkcol}表主键字段列表
##$!{velocityCount}循环次数
##$!{cb.propertyName}字段属性名，如：fullName
##$!{cb.colName}字段列名，如：full_name
##$!{cb.propertyType}字段属性类型名，如：String
##$!{gb.packageName}包名，如：net.letuu.order
##$cb.propertyType   字段的数据库类型
##所有字段
#macro(allField $tbb)
    #foreach($cb in $tbb.colList)$!{cb.colNameCheck}#if(!$foreach.last) , #end#end
#end
#macro(allFieldAndValue $tbb )
    #foreach($pkcol in $tbb.colList)
        ${pkcol.colNameCheck}=#${pkcol.propertyName}# #if(!$foreach.last) AND #end
    #end
#end
#macro(pkField $tbb $str)
    #foreach($cb in $tbb.pkcol)$!{cb.colNameCheck}#if(!$foreach.last) , #end#end
#end
#macro(pklFieldAndValue $tbb)
    #foreach($pkcol in $tbb.pkcol)
        ${pkcol.colNameCheck}=#{${pkcol.propertyName}} #if(!$foreach.last) AND #end
    #end
#end
##jdbcType转换
#macro(validJT $type)
#if("DATETIME"==($type)) 
TIMESTAMP#elseif("Long"==($type))
DECIMAL#elseif("INT"==($type))
DECIMAL#else
$type#end
#end
##批量删除与查找
#macro(pklFieldAndValues $tbb)
    #foreach($pkcol in $tbb.pkcol)
        #if(!$foreach.last)
            ${pkcol.colNameCheck}=#{${pkcol.propertyName}} AND
        #else
            ${pkcol.colNameCheck} in
                <foreach item="item" index="index" collection="list" open="("
			        separator="," close=")">
			        #{item}
			    </foreach>
        #end
    #end
#end
#macro(escape $str)$str#end
#set($conf=$!{tbb.conf})
#set($PO = $!{gb.objSuffix})
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="$!{gb.packageName}.mapper.$!{tbb.className}Mapper">
    <!-- Alias Map Defined
    <typeAlias alias="${tbb.className}Query" type="$!{gb.packageName}.query.${tbb.className}Query"/>
    <typeAlias alias="${tbb.className}" type="$!{gb.packageName}.pojo.${tbb.className}${PO}"/>
     -->
    <resultMap id="${tbb.objectName}"  type="$!{gb.packageName}.pojo.${tbb.className}${PO}">
    #foreach($cb in $tbb.colList)
        <result property="$!cb.propertyName" column="$!cb.colName"/>
    #end
    </resultMap>
    <!-- Select SQL -->
    <sql id="Base_Column_List">
	#allField( $tbb )
    </sql>
    
    <sql id="selectParams">
    <if test="page_object != null">
    <where>
     #foreach($cb in $tbb.colList)
      			#if($cb.propertyType !="Date" )
      				<if test="page_object.$!{cb.propertyName} != null and page_object.$!{cb.propertyName} != ''" >
     				AND  $cb.colNameCheck = #{page_object.$!{cb.propertyName},jdbcType=#validJT(${cb.colType})} 
     				 </if>
                #elseif(${cb.colName}!=${conf.addField} && ${cb.colName}!=${conf.updField})
                    <if test="page_object.$!{cb.propertyName}Start != null" >
                    AND <![CDATA[  $!{cb.colNameCheck} >= #{$!{cb.propertyName}Start,jdbcType=#validJT(${cb.colType})} ]]>
                    </if>
                    <if test="page_object.$!{cb.propertyName}End != null " >
                     AND <![CDATA[  $!{cb.colNameCheck} <= #{$!{cb.propertyName}End,jdbcType=#validJT(${cb.colType})} ]]>
                    </if>
                    <if test="page_object.$!{cb.propertyName}Equal != null " >
			             AND   <![CDATA[  $!{cb.colNameCheck} = #{$!{cb.propertyName}Equal,jdbcType=#validJT(${cb.colType})} ]]>
                    </if>
                #end
            #end
    </where>
    </if>
    </sql>

    #if($conf.isGetByKey())
        <!-- 根据主键查询 -->
        <select id="selectByPrimaryKey" resultMap="${tbb.objectName}"  parameterType="DECIMAL">
           ##POJO对象上没有Field属性所以选择selector会抛出异常,临时解决
           SELECT   <include refid="Base_Column_List" />  FROM ${tbb.tableName}
           <where>
           #pklFieldAndValue( $tbb )
           </where>
    </select>
    #end
    #if($conf.isGetByKeys())
     	<!-- 根据多个主键查询 -->
        <select id="selectByKeys" resultMap="${tbb.objectName}"  parameterType="hashMap">
            SELECT    <include refid="Base_Column_List" />  FROM ${tbb.tableName}
                <where>
            #pklFieldAndValues($tbb)
            </where>
        </select>
    #end

    #if($conf.isDelByKey())
        <!-- 根据主键删除 -->
        <delete id="deleteByPrimaryKey"  parameterType="hashMap">
            DELETE FROM ${tbb.tableName}
                <where>
            #pklFieldAndValue( $tbb )
            </where>
        </delete>
    #end

    #if($conf.isDelByKeys())
    <!-- 根据多个主键删除 -->
    <delete id="deleteByKeys">
        DELETE FROM ${tbb.tableName}
            <where>
        #pklFieldAndValues($tbb)
        </where>
    </delete>
    #end

    #if($conf.isUpdateKey())
        <!-- 根据主键更新 -->
        ##假设没有数据变化则不会产生io操作
        ##去除更新时间插入时间的字段,有数据变更，时间修改交给数据库执行
        <update id="updateByPrimaryKeySelective" parameterType="$!{gb.packageName}.pojo.${tbb.className}${PO}">
            UPDATE ${tbb.tableName}
            <set >
                #foreach($cb in $tbb.colList)
                #if(${cb.colName}!=${conf.addField} && ${cb.colName}!=${conf.updField})
                   <if test="$!{cb.propertyName} != null" >
                            $cb.colNameCheck = #{$!{cb.propertyName},jdbcType=#validJT(${cb.colType})},
                    </if>
                #end
            #end
            </set>
            <where>
            #pklFieldAndValue( $tbb )
            </where>
        </update>
    #end
   
    <!-- 搜索列表信息 -->
    <select id="selectList" parameterType="hashMap" resultMap="${tbb.objectName}">
    select <include refid="Base_Column_List" /> from ${tbb.tableName}
       <include refid="selectParams" />
    </select>
    
    <!-- 搜索分页列表信息 -->
    <select id="selectListByPage" parameterType="hashMap" resultMap="${tbb.objectName}">
    select <include refid="Base_Column_List" /> from ${tbb.tableName}
    <include refid="selectParams" />
    </select>

    ##add代码
    <!--保存所有字段-->
    <insert id="insert" parameterType="$!{gb.packageName}.pojo.${tbb.className}${PO}">
    INSERT INTO ${tbb.tableName}(
    #foreach($cb in $tbb.colList)
       $!{cb.colNameCheck} #if(!$foreach.last),#end
    #end
    VALUES(
    #foreach($cb in $tbb.colList)
        #{$!{cb.propertyName},jdbcType=#validJT(${cb.colType})} #if(!$foreach.last),#end
    #end
    )
    </insert>
    
    ##add代码
    <!--保存所有不为空的字段-->
    <insert id="insertSelective" parameterType="$!{gb.packageName}.pojo.${tbb.className}${PO}">
        INSERT INTO ${tbb.tableName}
       <trim prefix="(" suffix=")" suffixOverrides="," >
            ##循环所有字段
            #foreach($cb in $tbb.colList)
                #if($!{cb.colName}==${conf.addField} ||$!{cb.colName}==${conf.updField})
                    ,$!{cb.colName.trim()},
                #else
                    <if test="$!{cb.propertyName} != null" >
                        $!{cb.colNameCheck.trim()},
                    </if>
                #end
            #end
         </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides="," >
            #foreach($cb in $tbb.colList)
                #if($!{cb.colName}==${conf.addField} ||$!{cb.colName}==${conf.updField})
                            ,now()
                #else
                    <if test="$!{cb.propertyName} != null" >
                            #{$!{cb.propertyName.trim()},jdbcType=#validJT(${cb.colType})},
                   </if>
                #end
            #end
       </trim>
    </insert>

    ##定制产生select方法。
        #if($conf.selectMap.size()>0)
            #foreach($sel in $conf.selectMap.keySet())
                #if( $conf.selectMap.get($sel) && $conf.selectMap.get($sel).size()>0)
                <select id="$!{tbb.className}.$sel" parameterType="hashMap" resultMap="${tbb.objectName}">
                    <include refid="${tbb.objectName}${PO}.selector"/>
                    where #foreach($w in $conf.selectMap.get($sel))
                    #if($!{tbb.colMap.get($w)})
                        #if(!$foreach.first) and #end $w = #$!{tbb.colMap.get($w).colName}#
                    #end
                #end
                </select>
                #end
            #end
        #end
</mapper>