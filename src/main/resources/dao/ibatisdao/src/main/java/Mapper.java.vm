##DAO实现代码生成模版
##使用到的变量有：
##$!{gb.packageName}包名，如：net.letuu.order
##$!{gb.userName}机器登录用户名，如：microboss
##$!{gb.nowDate}当前日期，如：2013-05-02
##$!{tbb.className}类名，如：UserInfo
##$!{tbb.objectName}对象名，如：userInfo
##宏定义,用于单一对象的删除与查找的参数
#macro(primaryKey)
    #foreach($pkcol in $tbb.pkcol) $!{pkcol.propertyType} $!{pkcol.propertyName}  #if(!$foreach.last), #end #end
    #if($conf.isSplitTable()), String tableId#end
#end
##宏定义,用于多对象的删除与查找的方法体
#macro( primaryKeyBody )
        Map<String, Object> params = new HashMap<String, Object>();
    #foreach($pkcol in $tbb.pkcol)
        params.put("$!{pkcol.propertyName}", $!{pkcol.propertyName});
    #end
    #if($conf.isSplitTable())
    params.put("tableId", tableId);
    #end
#end
##宏定义,用于多对象的删除与查找的参数
#macro( primaryKeys $tbb )
    #foreach($pkcol in $tbb.pkcol)#if($foreach.last)List<$!{pkcol.propertyType}> $!{pkcol.propertyName}List#else$!{pkcol.propertyType} $!{pkcol.propertyName},#end#end
    #if($conf.isSplitTable()), String tableId#end
#end
##宏定义,用于多对象的删除与查找的方法体
#macro( primaryKeysBody $tbb )
        Map<String, Object> params = new HashMap<String, Object>();
    #foreach($pkcol in $tbb.pkcol)
        #if($foreach.last)
        params.put("keys", $!{pkcol.propertyName}List);
        #else
        params.put("$!{pkcol.propertyName}", $!{pkcol.propertyName});
        #end
    #end
    #if($conf.isSplitTable())
    params.put("tableId", tableId);
    #end
#end
#set($conf=$!{tbb.conf})
#set($PO = $!{gb.objSuffix})
#set($clear = "")
package $!{gb.packageName}.mapper;

##import com.ibatis.sqlmap.client.SqlMapClient;
##import org.springframework.stereotype.Repository;

##import javax.annotation.Resource;
##import java.sql.SQLException;
##import java.util.HashMap;
##import java.util.List;
##import java.util.Map;
#foreach($cb in $tbb.colList)
#if($!{cb.propertyType}=="Clob"&&!$clob)
import java.sql.Clob;
#set($clob=true)
#elseif($!{cb.propertyType}=="Blob"&&!$blob)
#import java.sql.Blob;
#set($blob=true)
#elseif($!{cb.propertyType}=="Date"&&!$d)
##import java.util.Date;
#set($d=true)
#elseif($!{cb.propertyType}=="BigDecimal"&&$!bigDecimal)
#import java.math.BigDecimal;
#set($bigDecimal=true)
#end
#end
#if($conf.isNeedPage())
##import java.util.Collections;

##import $!{gb.packageName}.common.Result;
import $!{gb.packageName}.dto.$!{tbb.className}Query;
#end
import $!{gb.packageName}.pojo.$!{tbb.className}${PO};
import com.cz.base.mapper.BaseMapper;

/**
 * @author  $!{gb.userName}
 * @date    $!{gb.nowDate}
 */


public interface $!{tbb.className}Mapper extends BaseMapper<$!{tbb.className}, $!{tbb.className}Query,Long>{

}