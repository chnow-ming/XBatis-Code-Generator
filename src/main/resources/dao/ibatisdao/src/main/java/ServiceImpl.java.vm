##DAO实现代码生成模版
##使用到的变量有：
##$!{gb.packageName}包名，如：net.letuu.order
##$!{gb.userName}机器登录用户名，如：microboss
##$!{gb.nowDate}当前日期，如：2013-05-02
##$!{tbb.className}类名，如：UserInfo
##$!{tbb.objectName}对象名，如：userInfo
##宏定义,用于单一对象的删除与查找的参数
#macro(primaryKey $tbb)
    #foreach($pkcol in $tbb.pkcol) $!{pkcol.propertyType} $!{pkcol.propertyName}  #if(!$foreach.last), #end #end
    #if($conf.isSplitTable()), String tableId#end
#end
##宏定义,用于多对象的删除与查找的参数
#macro( primaryKeys $tbb )
    #foreach($pkcol in $tbb.pkcol)#if($foreach.last)List<$!{pkcol.propertyType}> $!{pkcol.propertyName}List#else$!{pkcol.propertyType} $!{pkcol.propertyName},#end#end
    #if($conf.isSplitTable()), String tableId#end
#end
##主键值
#macro( primaryValue $tbb)
    #foreach($pkcol in $tbb.pkcol)$!{pkcol.propertyName}  #if(!$foreach.last), #end #end
    #if($conf.isSplitTable()), tableId #end
#end
##主键值
#macro( primaryValues $tbb )
    #foreach($pkcol in $tbb.pkcol)#if($foreach.last)$!{pkcol.propertyName}List#else $!{pkcol.propertyName},#end#end
    #if($conf.isSplitTable()), tableId #end
#end
#macro( tableType $isSplitTable )
    #if($isSplitTable), String tableId#end
#end
#macro( tableValue $isSplitTable )
    #if($isSplitTable)
        #if($isSplitTable), tableId#end
    #end
#end
#set($conf=$!{tbb.conf})
#set($PO = $!{gb.objSuffix})
#set($clear = "")
package $!{gb.packageName}.service.impl;


#foreach($cb in $tbb.colList)
#if($!{cb.propertyType}=="Clob"&&!$clob)
import java.sql.Clob;
#set($clob=true)
#elseif($!{cb.propertyType}=="Blob"&&!$blob)
import java.sql.Blob;
#set($blob=true)
#elseif($!{cb.propertyType}=="Date"&&!$d)
import java.util.Date;
#set($d=true)
#elseif($!{cb.propertyType}=="BigDecimal"&&!$bigDecimal)
import java.math.BigDecimal;
#set($bigDecimal=true)
#end
#end
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.stereotype.Component;
import $!{gb.packageName}.pojo.$!{tbb.className}${PO};
import $!{gb.packageName}.dto.$!{tbb.className}Query;
import com.lunjar.base.service.impl.BaseServiceImpl;
import $!{gb.packageName}.service.$!{tbb.className}Service;
/**
 * @author $!{gb.userName}
 * @since $!{gb.nowDate}
 */
@Component
public class $!{tbb.className}ServiceImpl extends BaseServiceImpl<$!{tbb.className}, $!{tbb.className}Query, Long> implements $!{tbb.className}Service{
	
private static final Log log = LogFactory.getLog($!{tbb.className}ServiceImpl.class);
}
